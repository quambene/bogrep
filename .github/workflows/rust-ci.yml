name: Rust CI
on:
    push:
      branches: [main]
    pull_request:
env:
  CARGO_TERM_COLOR: always
jobs:
  check:
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v4
        - uses: dtolnay/rust-toolchain@stable
        - name: cargo check
          run: cargo check
  clippy:
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v4
        - uses: dtolnay/rust-toolchain@stable
        - name: cargo clippy --all-features --all-targets -- -D warnings
          run: cargo clippy --all-features --all-targets -- -D warnings
  doc:
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v4
        - uses: dtolnay/rust-toolchain@stable
        - name: cargo doc
          run: cargo doc --no-deps --all-features
  fmt:
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v4
        - uses: dtolnay/rust-toolchain@stable
        - name: cargo fmt --check
          run: cargo fmt --check
  fmt-nightly:
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v4
        - uses: dtolnay/rust-toolchain@nightly
          with:
            components: rustfmt
        - name: cargo +nightly fmt --check
          run: cargo +nightly fmt --check
  test:
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v4
        - uses: dtolnay/rust-toolchain@stable
        - name: cargo test --lib
          run: cargo test --lib --locked
  integration-test:
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v4
        - uses: dtolnay/rust-toolchain@stable
        - name: cargo test --test '*'
          run: cargo test --test '*' --locked
  os-test:
    runs-on: ${{ matrix.os }}
    name: os-test / ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest]
    steps:
        - uses: actions/checkout@v4
        - uses: dtolnay/rust-toolchain@stable
        - name: cargo test --lib
          run: cargo test --lib --locked
        - name: cargo test --test '*'
          run: cargo test --test '*' --locked
  doc-test:
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v4
        - uses: dtolnay/rust-toolchain@stable
        - name: cargo test --doc
          run: cargo test --locked --doc
  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview
      - name: cargo install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: cargo generate-lockfile
        if: hashFiles('Cargo.lock') == ''
        run: cargo generate-lockfile
      - name: cargo llvm-cov
        run: cargo llvm-cov --locked --all-features --lcov --output-path lcov.info
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v3
        with:
          files: lcov.info
          fail_ci_if_error: true
